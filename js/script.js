// Generated by CoffeeScript 1.9.3
(function() {
  this.SilentParrot = (function() {
    function SilentParrot() {
      this.websiteWindow = $(window);
      this.mainWrapper = $('.universe--wrapper');
      this.pages = this.mainWrapper.find('.page');
      this.mainWrapperPosition = this._getWrapperSize();
      this.homePage = this.mainWrapper.find('.home--page');
      this.aboutUsPage = this.mainWrapper.find('.about--us--page');
      this.randomPage = this.mainWrapper.find('.random--page');
      this.contactPage = this.mainWrapper.find('.contact--page');
      this.orderOfPages = [this.homePage, this.aboutUsPage, this.randomPage, this.contactPage];
      this.activePage = 'home';
      this.leftCounter = 0;
      this.mainWrapperTop = 0;
      this._pageSize();
      this.websiteWindow.on('resize', this._pageSize.bind(this));
      $(window).on('mousewheel DOMMouseScroll', this._scrollEventHandler.bind(this));
    }

    SilentParrot.prototype._pageSize = function() {
      var i, len, page, ref, windowH, windowW;
      windowW = this.websiteWindow.width();
      windowH = this.websiteWindow.height();
      ref = this.pages;
      for (i = 0, len = ref.length; i < len; i++) {
        page = ref[i];
        page = $(page);
        page.height(windowH);
        page.width(windowW);
        return {
          windowW: windowW,
          windowH: windowH
        };
      }
    };

    SilentParrot.prototype._getWrapperSize = function() {
      var elementPosition;
      elementPosition = this.mainWrapper[0].getBoundingClientRect();
      return elementPosition;
    };

    SilentParrot.prototype._scrollEventHandler = function(e) {
      this.mainWrapperPosition = this._getWrapperSize();
      this._getActivePage();
      if (e.originalEvent.wheelDelta > 0 || e.originalEvent.detail < 0) {
        console.log("Scrolled up");
        return this._scrollWrapperLeft();
      } else {
        return this._scrollWrapperRight();
      }
    };

    SilentParrot.prototype._checkIfOverscroll = function() {
      var bottom, height, left, right, top;
      height = this.homePage.height;
      top = this.mainWrapper[0].getBoundingClientRect().top;
      right = this.mainWrapper[0].getBoundingClientRect().right;
      bottom = this.mainWrapper[0].getBoundingClientRect().bottom;
      left = this.mainWrapper[0].getBoundingClientRect().left;
      console.log("TOP, ", top, "\nRIGHT: ", right, "\nBOTTOM: ", bottom, "\nLEFT: ", left);
      if (top < (-height)) {
        console.log("too high");
        return false;
      }
    };

    SilentParrot.prototype._scrollWrapperRight = function() {
      this._checkIfOverscroll();
      this.leftCounter = this.leftCounter + 10;
      console.log("Main Wrapper Left", this.leftCounter);
      console.log("Main Wrapper Left", this.mainWrapper[0].getBoundingClientRect().right);
      if (this.leftCounter <= 100) {
        return TweenLite.to(this.mainWrapper, 1, {
          left: "-" + this.leftCounter + "%",
          ease: Power0.easeNone
        });
      } else if (this.leftCounter >= 100 && this.leftCounter <= 200) {
        return TweenLite.to(this.mainWrapper, 1, {
          top: "-" + (this.leftCounter - 100) + "%",
          ease: Power0.easeNone
        });
      } else if (this.leftCounter >= 200 && this.leftCounter <= 300) {
        return TweenLite.to(this.mainWrapper, 1, {
          left: (this.leftCounter - 300) + "%",
          ease: Power0.easeNone
        });
      } else if (this.leftCounter >= 300 && this.leftCounter <= 400) {
        return TweenLite.to(this.mainWrapper, 1, {
          top: (this.leftCounter - 400) + "%",
          ease: Power0.easeNone
        });
      } else {
        return this.leftCounter = 0;
      }
    };

    SilentParrot.prototype._scrollWrapperLeft = function() {
      this.leftCounter = this.leftCounter - 100;
      return TweenLite.to(this.mainWrapper, 0.3, {
        y: this.leftCounter,
        ease: Power1.easeInOut
      });
    };

    SilentParrot.prototype._getActivePage = function() {
      var height, i, len, name, page, position, ref, results, width;
      height = this.websiteWindow.height();
      width = this.websiteWindow.width();
      ref = this.orderOfPages;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        page = ref[i];
        position = page[0].getBoundingClientRect();
        if ((position.top >= 0 && position.top <= height / 2) && (position.left >= 0 && position.left <= width / 2)) {
          name = $(page).data('page-name');
          results.push(this._setUrl(name));
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    SilentParrot.prototype._setUrl = function(newActivePage) {
      console.log("NEW active page", newActivePage);
      if (this.activePage !== newActivePage) {
        this.activePage = newActivePage;
        return window.location.hash = this.activePage;
      }
    };

    return SilentParrot;

  })();

  $(function() {
    var silentParrot;
    return silentParrot = new SilentParrot();
  });

}).call(this);
